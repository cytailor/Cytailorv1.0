from elasticsearch import Elasticsearch
from flask import Flask
from flask_restful import Api
import Crud_functions

app = Flask(__name__)
api = Api(app)
# Password for the 'elastic' user generated by Elasticsearch
ELASTIC_PASSWORD = "H*j6eoznPUYhmvmcz8LR"

# Create the client instance
es = Elasticsearch(
    "https://localhost:9200",
    # ca_certs="C:/Users/Public/certs/http_ca.crt",
    verify_certs=False,
    basic_auth=("elastic", ELASTIC_PASSWORD)
)


# client = Elasticsearch(hosts=[{"host": 'https://localhost/', 'port': 9200}])
# @app.route('elastic/addanswers', methods=['PUT'])
def addanswers():
    ucasset = sorted(Crud_functions.get_uc_assets(), key=lambda x: x[0])
    ucvulnerability = sorted(Crud_functions.get_uc_vulnerabilities(), key=lambda x: x[0])
    data = {
        "user": "userid",
        "vulnerabilities": {
            "question1": 2,
            "question2": 1,
            "question3": 2,
            "question4": 1,
            "question5": 2,
            "question6": 1
        },
        "assets": {
            "question1": 2,
            "question2": 1,
            "question3": 2,
            "question4": 1,
            "question5": 2,
            "question6": 1
        }
    }
    vulnerabilities = {}
    assets = {}
    # classify questions and their answers per usecase related to vulnerabilities
    for i in data["vulnerabilities"].keys():
        for j in ucvulnerability:
            if j[3]:
                if int(i[8:]) in j[3]:
                    if "usecase {}".format(j[0]) not in vulnerabilities.keys():
                        vulnerabilities["usecase {}".format(j[0])] = {}
                        print(vulnerabilities)
                        vulnerabilities["usecase {}".format(j[0])][i] = data["vulnerabilities"][i]
                        print(vulnerabilities)
                    else:
                        vulnerabilities["usecase {}".format(j[0])][i] = data["vulnerabilities"][i]
                        print(vulnerabilities)

    # classify questions and their answers per usecase related to assets
    for i in data["assets"].keys():
        for j in ucasset:
            if j[2]:
                if int(i[8:]) in j[2]:
                    if "usecase {}".format(j[0]) not in assets.keys():
                        assets["usecase {}".format(j[0])] = {}
                        assets["usecase {}".format(j[0])][i] = data["assets"][i]
                    else:
                        assets["usecase {}".format(j[0])][i] = data["assets"][i]

    print({"user": data["user"], "vulnerabilities": vulnerabilities, "assets": assets})
    es.index(index="answer001", document={"user": data["user"], "vulnerabilities": vulnerabilities, "assets": assets})


if __name__ == '__main__':
    # Successful response!
    resp = es.search(index="answer001", query={"match": {"user": "userid"}})
    # resp = client.get(index="answer001", id=1)
    print(resp['hits']['hits'])
    # print("Got %d Hits:" % resp['hits']['total']['value'])
    # {'name': 'instance-0000000000', 'cluster_name': ...}
    # addanswers()
